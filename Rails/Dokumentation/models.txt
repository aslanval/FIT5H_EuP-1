Der Zugang zu Datenbank wird bei Rails in den Model-Klassen geregelt.

Die Datenbank-Einstellungen der Applikation sind in der Datei:
	config/database.yml 
	
Im Allgemeinen gilt:
	einer Tabelle in der Datenbank entspricht eine Klasse im Unterordner app/models 
	Models sind grundsätzlich im Singular benannt:
		Bsp:
			app/models/event.rb
				class Event
	Die Tabellen, die zu den Models gehören sind immer im Plural
		Bsp.:
			Tabelle heisst: events

Erstellen von Tabellen/Models:
	Der Befehl: 
		rails g model event name:string location:string price:decimal
	erstellt:
		Datei app/models/event.rb mit Klasse: class Event
		Datei db/migrate/324242424_create_events.rb

Alle Änderungen an einer Datenbank werden mit Hilfe von Migrationen erstellt, d.h. Ruby-Klassen in denen Tabellen neu angelegt oder verändert werden können.
Diese Migrations müssen mit einem seperaten Befehl zur Datenbank gesendet werden:
	rake db:migrate

Beziehungen:
	1:n - In der untergordneten Tabelle sind beliebig viele Elemente einem Element in der Haupttabelle zugeorednet.
	Beispiel: Ein Event hat beliebig viele Teilnehmer.

	Eine Beziehung wird in ActiveRecord über eine Definition in der Model-Klasse hergestellt:

	class event
		has_many :members

	class member
		belongs_to :event

	Durch diese Zuordnung werden beim Starten des Rails-Server eine Vielzahl von Funktionen erstellt, die es ermöglichen über die eine Klasse auf die korresponiderende zuzugreifen. 